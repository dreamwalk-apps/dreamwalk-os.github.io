(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var o=n(2),b=n(6),a=(n(0),n(92)),l=n(93),r={id:"buttons",title:"Buttons",sidebar_label:"Buttons",slug:"/"},i={unversionedId:"buttons",id:"buttons",isDocsHomePage:!1,title:"Buttons",description:"Collection of buttons common throughout DreamWalk projects",source:"@site/docs/buttons.md",slug:"/",permalink:"/docs/",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/buttons.md",version:"current",sidebar_label:"Buttons",sidebar:"someSidebar",next:{title:"Text Inputs",permalink:"/docs/text-inputs"}},c=[{value:"Block Button",id:"block-button",children:[{value:"Demo",id:"demo",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Props",id:"props",children:[]},{value:"Events",id:"events",children:[]}]}],s={rightToc:c};function p(e){var t=e.components,n=Object(b.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Collection of buttons common throughout DreamWalk projects"),Object(a.b)("h2",{id:"block-button"},"Block Button"),Object(a.b)("p",null,"Common block button with support for loading/disabled states and additional styling."),Object(a.b)("h3",{id:"demo"},"Demo"),Object(a.b)("iframe",{src:Object(l.a)("/video/block-buttons-demo.webm"),autoPlay:!0,loop:!0,width:"292",height:"633",frameBorder:"0",class:"giphy-embed",allowFullScreen:!0}),Object(a.b)("h3",{id:"usage"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),'import React, { useState } from "react";\nimport { StyleSheet, View } from "react-native";\nimport BlockButton from "../components/BlockButton";\n\nexport default function App() {\n    const [loading, setLoading] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n    return (\n        <View style={styles.container}>\n            <BlockButton\n                text="Log in"\n                loading={loading}\n                disabled={disabled}\n                containerStyle={{ alignSelf: "stretch", marginTop: 20 }}\n            />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({ ... });\n')),Object(a.b)("hr",null),Object(a.b)("h3",{id:"props"},"Props"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"text"))),Object(a.b)("p",null,"Label value of the input"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"containerStyle"))),Object(a.b)("p",null,"Style applied to the container pressable component"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"buttonStyle"))),Object(a.b)("p",null,"Style applied to the button"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"bodyStyle"))),Object(a.b)("p",null,"Style applied to the items within the button"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"textStyle"))),Object(a.b)("p",null,"Style applied to the buttons label text component"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"textColor"))),Object(a.b)("p",null,"Label text color"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"gradientColors"))),Object(a.b)("p",null,"Colors to be used for the gradient of button for use with ",Object(a.b)("inlineCode",{parentName:"p"},"GradientBlockButton")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"gradientStart"))),Object(a.b)("p",null,"Start position of gradient for use with ",Object(a.b)("inlineCode",{parentName:"p"},"GradientBlockButton")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"gradientEnd"))),Object(a.b)("p",null,"End position of gradient for use with ",Object(a.b)("inlineCode",{parentName:"p"},"GradientBlockButton")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"loading"))),Object(a.b)("p",null,"When ",Object(a.b)("inlineCode",{parentName:"p"},"true"),", triggers the loading indicator to display and also disables touches"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"disabed"))),Object(a.b)("p",null,"When ",Object(a.b)("inlineCode",{parentName:"p"},"true"),", disables touch events on the button"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"disabed"))),Object(a.b)("p",null,"Disable touch events on the button"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"gradientTransitionDuration"))),Object(a.b)("p",null,"Length of transition time in ms when updating ",Object(a.b)("inlineCode",{parentName:"p"},"gradientColors")," prop"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"PostFixComponent"))),Object(a.b)("p",null,"Component to render on right hand side of button"),Object(a.b)("h3",{id:"events"},"Events"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"onPress"))),Object(a.b)("p",null,"On press of button"),Object(a.b)("hr",null))}p.isMDXComponent=!0}}]);